#ifndef KNERON_NEF_READER_H
#define KNERON_NEF_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#undef flatbuffers_extension
#define flatbuffers_extension ".nef"


typedef const struct KneronNEF_SchemaVersion_table *KneronNEF_SchemaVersion_table_t;
typedef struct KneronNEF_SchemaVersion_table *KneronNEF_SchemaVersion_mutable_table_t;
typedef const flatbuffers_uoffset_t *KneronNEF_SchemaVersion_vec_t;
typedef flatbuffers_uoffset_t *KneronNEF_SchemaVersion_mutable_vec_t;
typedef const struct KneronNEF_ModelBin_table *KneronNEF_ModelBin_table_t;
typedef struct KneronNEF_ModelBin_table *KneronNEF_ModelBin_mutable_table_t;
typedef const flatbuffers_uoffset_t *KneronNEF_ModelBin_vec_t;
typedef flatbuffers_uoffset_t *KneronNEF_ModelBin_mutable_vec_t;
typedef const struct KneronNEF_ModelInfo_table *KneronNEF_ModelInfo_table_t;
typedef struct KneronNEF_ModelInfo_table *KneronNEF_ModelInfo_mutable_table_t;
typedef const flatbuffers_uoffset_t *KneronNEF_ModelInfo_vec_t;
typedef flatbuffers_uoffset_t *KneronNEF_ModelInfo_mutable_vec_t;
typedef const struct KneronNEF_NEFHeader_table *KneronNEF_NEFHeader_table_t;
typedef struct KneronNEF_NEFHeader_table *KneronNEF_NEFHeader_mutable_table_t;
typedef const flatbuffers_uoffset_t *KneronNEF_NEFHeader_vec_t;
typedef flatbuffers_uoffset_t *KneronNEF_NEFHeader_mutable_vec_t;
typedef const struct KneronNEF_NEFContent_table *KneronNEF_NEFContent_table_t;
typedef struct KneronNEF_NEFContent_table *KneronNEF_NEFContent_mutable_table_t;
typedef const flatbuffers_uoffset_t *KneronNEF_NEFContent_vec_t;
typedef flatbuffers_uoffset_t *KneronNEF_NEFContent_mutable_vec_t;
#ifndef KneronNEF_SchemaVersion_file_identifier
#define KneronNEF_SchemaVersion_file_identifier flatbuffers_identifier
#endif
/* deprecated, use KneronNEF_SchemaVersion_file_identifier */
#ifndef KneronNEF_SchemaVersion_identifier
#define KneronNEF_SchemaVersion_identifier flatbuffers_identifier
#endif
#define KneronNEF_SchemaVersion_type_hash ((flatbuffers_thash_t)0x1724f044)
#define KneronNEF_SchemaVersion_type_identifier "\x44\xf0\x24\x17"
#ifndef KneronNEF_ModelBin_file_identifier
#define KneronNEF_ModelBin_file_identifier flatbuffers_identifier
#endif
/* deprecated, use KneronNEF_ModelBin_file_identifier */
#ifndef KneronNEF_ModelBin_identifier
#define KneronNEF_ModelBin_identifier flatbuffers_identifier
#endif
#define KneronNEF_ModelBin_type_hash ((flatbuffers_thash_t)0xfbb82f8d)
#define KneronNEF_ModelBin_type_identifier "\x8d\x2f\xb8\xfb"
#ifndef KneronNEF_ModelInfo_file_identifier
#define KneronNEF_ModelInfo_file_identifier flatbuffers_identifier
#endif
/* deprecated, use KneronNEF_ModelInfo_file_identifier */
#ifndef KneronNEF_ModelInfo_identifier
#define KneronNEF_ModelInfo_identifier flatbuffers_identifier
#endif
#define KneronNEF_ModelInfo_type_hash ((flatbuffers_thash_t)0x625b2368)
#define KneronNEF_ModelInfo_type_identifier "\x68\x23\x5b\x62"
#ifndef KneronNEF_NEFHeader_file_identifier
#define KneronNEF_NEFHeader_file_identifier flatbuffers_identifier
#endif
/* deprecated, use KneronNEF_NEFHeader_file_identifier */
#ifndef KneronNEF_NEFHeader_identifier
#define KneronNEF_NEFHeader_identifier flatbuffers_identifier
#endif
#define KneronNEF_NEFHeader_type_hash ((flatbuffers_thash_t)0x905141b1)
#define KneronNEF_NEFHeader_type_identifier "\xb1\x41\x51\x90"
#ifndef KneronNEF_NEFContent_file_identifier
#define KneronNEF_NEFContent_file_identifier flatbuffers_identifier
#endif
/* deprecated, use KneronNEF_NEFContent_file_identifier */
#ifndef KneronNEF_NEFContent_identifier
#define KneronNEF_NEFContent_identifier flatbuffers_identifier
#endif
#define KneronNEF_NEFContent_type_hash ((flatbuffers_thash_t)0xe671d001)
#define KneronNEF_NEFContent_type_identifier "\x01\xd0\x71\xe6"

/** ************************************************************************************************************
 * *   Release Note
 * *   v1.0.1 (2023 04/14)
 * *       1.Rename namespace to KneronNEF
 * *
 * *   v1.0.0 (2022 10/24)
 * *       1.Remove default value of SchemaVersion
 * *       2.align start address of all_models.bin to 32byte address
 * *
 * ************************************************************************************************************* */
typedef int32_t KneronNEF_NPUTarget_enum_t;
__flatbuffers_define_integer_type(KneronNEF_NPUTarget, KneronNEF_NPUTarget_enum_t, 32)
#define KneronNEF_NPUTarget_KL520 ((KneronNEF_NPUTarget_enum_t)INT32_C(0))
#define KneronNEF_NPUTarget_KL720 ((KneronNEF_NPUTarget_enum_t)INT32_C(1))
#define KneronNEF_NPUTarget_KL530 ((KneronNEF_NPUTarget_enum_t)INT32_C(2))
#define KneronNEF_NPUTarget_KL730 ((KneronNEF_NPUTarget_enum_t)INT32_C(3))
#define KneronNEF_NPUTarget_KL630 ((KneronNEF_NPUTarget_enum_t)INT32_C(4))
#define KneronNEF_NPUTarget_KL540 ((KneronNEF_NPUTarget_enum_t)INT32_C(5))

static inline const char *KneronNEF_NPUTarget_name(KneronNEF_NPUTarget_enum_t value)
{
    switch (value) {
    case KneronNEF_NPUTarget_KL520: return "KL520";
    case KneronNEF_NPUTarget_KL720: return "KL720";
    case KneronNEF_NPUTarget_KL530: return "KL530";
    case KneronNEF_NPUTarget_KL730: return "KL730";
    case KneronNEF_NPUTarget_KL630: return "KL630";
    case KneronNEF_NPUTarget_KL540: return "KL540";
    default: return "";
    }
}

static inline int KneronNEF_NPUTarget_is_known_value(KneronNEF_NPUTarget_enum_t value)
{
    switch (value) {
    case KneronNEF_NPUTarget_KL520: return 1;
    case KneronNEF_NPUTarget_KL720: return 1;
    case KneronNEF_NPUTarget_KL530: return 1;
    case KneronNEF_NPUTarget_KL730: return 1;
    case KneronNEF_NPUTarget_KL630: return 1;
    case KneronNEF_NPUTarget_KL540: return 1;
    default: return 0;
    }
}

typedef int32_t KneronNEF_ENCMode_enum_t;
__flatbuffers_define_integer_type(KneronNEF_ENCMode, KneronNEF_ENCMode_enum_t, 32)
#define KneronNEF_ENCMode_EM_None ((KneronNEF_ENCMode_enum_t)INT32_C(0))
#define KneronNEF_ENCMode_EM_CUSTOM ((KneronNEF_ENCMode_enum_t)INT32_C(1))
#define KneronNEF_ENCMode_EM_KNNum ((KneronNEF_ENCMode_enum_t)INT32_C(2))

static inline const char *KneronNEF_ENCMode_name(KneronNEF_ENCMode_enum_t value)
{
    switch (value) {
    case KneronNEF_ENCMode_EM_None: return "EM_None";
    case KneronNEF_ENCMode_EM_CUSTOM: return "EM_CUSTOM";
    case KneronNEF_ENCMode_EM_KNNum: return "EM_KNNum";
    default: return "";
    }
}

static inline int KneronNEF_ENCMode_is_known_value(KneronNEF_ENCMode_enum_t value)
{
    switch (value) {
    case KneronNEF_ENCMode_EM_None: return 1;
    case KneronNEF_ENCMode_EM_CUSTOM: return 1;
    case KneronNEF_ENCMode_EM_KNNum: return 1;
    default: return 0;
    }
}



struct KneronNEF_SchemaVersion_table { uint8_t unused__; };

static inline size_t KneronNEF_SchemaVersion_vec_len(KneronNEF_SchemaVersion_vec_t vec)
__flatbuffers_vec_len(vec)
static inline KneronNEF_SchemaVersion_table_t KneronNEF_SchemaVersion_vec_at(KneronNEF_SchemaVersion_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(KneronNEF_SchemaVersion_table_t, vec, i, 0)
__flatbuffers_table_as_root(KneronNEF_SchemaVersion)

__flatbuffers_define_scalar_field(0, KneronNEF_SchemaVersion, major_num, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, KneronNEF_SchemaVersion, minor_num, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(2, KneronNEF_SchemaVersion, revision_num, flatbuffers_uint32, uint32_t, UINT32_C(0))

struct KneronNEF_ModelBin_table { uint8_t unused__; };

static inline size_t KneronNEF_ModelBin_vec_len(KneronNEF_ModelBin_vec_t vec)
__flatbuffers_vec_len(vec)
static inline KneronNEF_ModelBin_table_t KneronNEF_ModelBin_vec_at(KneronNEF_ModelBin_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(KneronNEF_ModelBin_table_t, vec, i, 0)
__flatbuffers_table_as_root(KneronNEF_ModelBin)

__flatbuffers_define_vector_field(0, KneronNEF_ModelBin, fw_info, flatbuffers_uint8_vec_t, 0)
__flatbuffers_define_vector_field(1, KneronNEF_ModelBin, all_models, flatbuffers_uint8_vec_t, 0)

struct KneronNEF_ModelInfo_table { uint8_t unused__; };

static inline size_t KneronNEF_ModelInfo_vec_len(KneronNEF_ModelInfo_vec_t vec)
__flatbuffers_vec_len(vec)
static inline KneronNEF_ModelInfo_table_t KneronNEF_ModelInfo_vec_at(KneronNEF_ModelInfo_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(KneronNEF_ModelInfo_table_t, vec, i, 0)
__flatbuffers_table_as_root(KneronNEF_ModelInfo)

__flatbuffers_define_string_field(0, KneronNEF_ModelInfo, name, 0)
__flatbuffers_define_scalar_field(1, KneronNEF_ModelInfo, id, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_string_field(2, KneronNEF_ModelInfo, version, 0)

struct KneronNEF_NEFHeader_table { uint8_t unused__; };

static inline size_t KneronNEF_NEFHeader_vec_len(KneronNEF_NEFHeader_vec_t vec)
__flatbuffers_vec_len(vec)
static inline KneronNEF_NEFHeader_table_t KneronNEF_NEFHeader_vec_at(KneronNEF_NEFHeader_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(KneronNEF_NEFHeader_table_t, vec, i, 0)
__flatbuffers_table_as_root(KneronNEF_NEFHeader)

__flatbuffers_define_string_field(0, KneronNEF_NEFHeader, platform, 0)
__flatbuffers_define_scalar_field(1, KneronNEF_NEFHeader, target, KneronNEF_NPUTarget, KneronNEF_NPUTarget_enum_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, KneronNEF_NEFHeader, crc, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(3, KneronNEF_NEFHeader, kn_number, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(4, KneronNEF_NEFHeader, encryption_mode, KneronNEF_ENCMode, KneronNEF_ENCMode_enum_t, INT32_C(0))
__flatbuffers_define_string_field(5, KneronNEF_NEFHeader, compiler_version, 0)
__flatbuffers_define_string_field(6, KneronNEF_NEFHeader, toolchain_version, 0)
__flatbuffers_define_table_field(7, KneronNEF_NEFHeader, schema_version, KneronNEF_SchemaVersion_table_t, 0)
__flatbuffers_define_scalar_field(8, KneronNEF_NEFHeader, uuid, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_string_field(9, KneronNEF_NEFHeader, solution_id, 0)
__flatbuffers_define_string_field(10, KneronNEF_NEFHeader, solution_tag, 0)

struct KneronNEF_NEFContent_table { uint8_t unused__; };

static inline size_t KneronNEF_NEFContent_vec_len(KneronNEF_NEFContent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline KneronNEF_NEFContent_table_t KneronNEF_NEFContent_vec_at(KneronNEF_NEFContent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(KneronNEF_NEFContent_table_t, vec, i, 0)
__flatbuffers_table_as_root(KneronNEF_NEFContent)

__flatbuffers_define_scalar_field(0, KneronNEF_NEFContent, magic, flatbuffers_uint32, uint32_t, UINT32_C(19840308))
__flatbuffers_define_table_field(1, KneronNEF_NEFContent, header, KneronNEF_NEFHeader_table_t, 0)
__flatbuffers_define_vector_field(2, KneronNEF_NEFContent, model_info, KneronNEF_ModelInfo_vec_t, 0)
__flatbuffers_define_table_field(3, KneronNEF_NEFContent, model_bin, KneronNEF_ModelBin_table_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* KNERON_NEF_READER_H */
